# Generated by Django 4.2.23 on 2025-08-24 14:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefono', models.CharField(blank=True, help_text='Número de teléfono del usuario', max_length=15, null=True)),
                ('documento', models.CharField(blank=True, help_text='Cédula o número de identificación', max_length=20, null=True, unique=True)),
                ('tipo_usuario', models.CharField(choices=[('administrador', 'Administrador'), ('encargado', 'Encargado'), ('usuario', 'Usuario')], default='usuario', help_text='Rol del usuario en el sistema', max_length=20)),
                ('activo', models.BooleanField(default=True, help_text='Indica si el usuario está activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('codigo', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Carrera',
                'verbose_name_plural': 'Carreras',
                'db_table': 'carrera',
                'ordering': ['facultad__nombre', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Espacio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('capacidad', models.IntegerField(blank=True, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='espacios', to='gestion_espacios_academicos.carrera')),
                ('encargado', models.ForeignKey(help_text='Usuario encargado del espacio', limit_choices_to={'tipo_usuario': 'encargado'}, on_delete=django.db.models.deletion.CASCADE, related_name='espacios_encargados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Espacio',
                'verbose_name_plural': 'Espacios',
                'db_table': 'espacio',
                'ordering': ['carrera__facultad__nombre', 'carrera__nombre', 'nombre'],
                'unique_together': {('nombre', 'carrera')},
            },
        ),
        migrations.CreateModel(
            name='Facultad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Facultad',
                'verbose_name_plural': 'Facultades',
                'db_table': 'facultad',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_evento', models.CharField(max_length=100)),
                ('descripcion_evento', models.TextField(blank=True, null=True)),
                ('fecha_evento', models.DateTimeField()),
                ('fecha_fin_evento', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aceptada', 'Aceptada'), ('rechazada', 'Rechazada')], default='pendiente', max_length=20)),
                ('motivo_rechazo', models.TextField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('administrador', models.ForeignKey(blank=True, help_text='Administrador que procesa la solicitud', limit_choices_to={'tipo_usuario': 'administrador'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solicitudes_procesadas', to=settings.AUTH_USER_MODEL)),
                ('espacio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes', to='gestion_espacios_academicos.espacio')),
                ('usuario_solicitante', models.ForeignKey(help_text='Usuario que realiza la solicitud', limit_choices_to={'tipo_usuario': 'usuario'}, on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud',
                'verbose_name_plural': 'Solicitudes',
                'db_table': 'solicitud',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HistorialSolicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='gestion_espacios_academicos.solicitud')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Solicitud',
                'verbose_name_plural': 'Historiales de Solicitudes',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='EspacioCampus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True)),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('encargado', models.ForeignKey(blank=True, limit_choices_to={'tipo_usuario': 'encargado'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='espacios_campus_encargados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Espacio de Campus',
                'verbose_name_plural': 'Espacios de Campus',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='carrera',
            name='facultad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carreras', to='gestion_espacios_academicos.facultad'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='carrera',
            field=models.ForeignKey(blank=True, help_text='Carrera del usuario', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='gestion_espacios_academicos.carrera'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='facultad',
            field=models.ForeignKey(blank=True, help_text='Facultad a la que pertenece el usuario', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='gestion_espacios_academicos.facultad'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='carrera',
            unique_together={('nombre', 'facultad')},
        ),
    ]
